release_update_setup = {
	#For displaying history
	set_variable = {
		which = history_stock_market_demand_for_$trade_good_id$
		which = country_total_stock_market_demand_for_$trade_good_id$ 
	}
	set_variable = {
		which = history_stock_market_supply_for_$trade_good_id$
		which = country_total_stock_market_supply_for_$trade_good_id$ 
	}
	set_variable = {
		which = history_stock_market_balance_for_$trade_good_id$
		which = history_stock_market_supply_for_$trade_good_id$
	}
	subtract_variable = {
		which = history_stock_market_balance_for_$trade_good_id$
		which = history_stock_market_demand_for_$trade_good_id$
	}
	


	set_variable = {
		which = stock_market_demand_for_$trade_good_id$
		value = 0
	}
	set_variable = {
		which = country_stock_market_supply_for_$trade_good_id$
		value = 0
	}
}

post_province_evaluation = {
	#We get country_stock_market_supply_for_$trade_good_id$ from those functions
	#Here we determine how much we sell globally

	
	#For localisation
	set_variable = {
		which = country_total_stock_market_supply_for_$trade_good_id$ 
		which = country_stock_market_supply_for_$trade_good_id$
	}

	#This one is redundant but I want it to be safe and unchanged
	set_variable = {
		which = country_total_stock_market_demand_for_$trade_good_id$ 
		which = stock_market_demand_for_$trade_good_id$
	}

	#Balance for localisation, also maybe later for calculations?
	set_variable = {
		which = country_total_stock_market_balance_for_$trade_good_id$ 
		which = country_total_stock_market_supply_for_$trade_good_id$ 
	}
	subtract_variable = {
		which = country_total_stock_market_balance_for_$trade_good_id$ 
		which = country_total_stock_market_demand_for_$trade_good_id$ 
	}


	#Growth since last month
	set_variable = {
		which = country_total_stock_market_supply_growth_for_$trade_good_id$ 
		which = country_total_stock_market_supply_for_$trade_good_id$ 
	}
	subtract_variable = {
		which = country_total_stock_market_supply_growth_for_$trade_good_id$ 
		which = history_stock_market_supply_for_$trade_good_id$
	}
	set_variable = {
		which = country_total_stock_market_demand_growth_for_$trade_good_id$ 
		which = country_total_stock_market_demand_for_$trade_good_id$ 
	}
	subtract_variable = {
		which = country_total_stock_market_demand_growth_for_$trade_good_id$ 
		which = history_stock_market_demand_for_$trade_good_id$
	}
	set_variable = {
		which = country_total_stock_market_balance_growth_for_$trade_good_id$ 
		which = country_total_stock_market_balance_for_$trade_good_id$ 
	}
	subtract_variable = {
		which = country_total_stock_market_balance_growth_for_$trade_good_id$ 
		which = history_stock_market_balance_for_$trade_good_id$
	}

	set_variable = {
		which = stock_market_supply_for_$trade_good_id$ 
		which = country_stock_market_supply_for_$trade_good_id$
	}

	# 75% goes to the global market
	multiply_variable = {
		which = stock_market_supply_for_$trade_good_id$ 
		value = 0.75
	}

	# 25% goes to the stockpile
	multiply_variable = {
		which = country_stock_market_supply_for_$trade_good_id$
		value = 0.25
	}

	change_variable = {
		which = country_stock_market_stockpile_for_$trade_good_id$
		which = country_stock_market_supply_for_$trade_good_id$
	}
}

set_REB_initial_variable = {
	set_variable = {
		which = stock_market_supply_for_$trade_good_id$
		value = 0
	}
	set_variable = {
		which = stock_market_demand_for_$trade_good_id$
		value = 0
	}
}

change_REB_variable = {
	change_variable = {
		which = stock_market_supply_for_$trade_good_id$
		which = PREV
	}
	change_variable = {
		which = stock_market_demand_for_$trade_good_id$
		which = PREV
	}
}

release_update = {
	REB = {
		execute_effect_for_every_trade_good = {
			scripted_effect = "set_REB_initial_variable"
		}
	}
	every_country = {
		limit = {
			NOT = {
				tag = REB
			}
		}

		execute_effect_for_every_trade_good = {
			scripted_effect = "release_update_setup"
		}
		
		export_to_variable = {
			variable_name = temp_global_trade_goods_size_modifier
			value = modifier:global_trade_goods_size_modifier
			who = ROOT
		}
		export_to_variable = {
			variable_name = temp_global_trade_goods_size
			value = modifier:global_trade_goods_size
			who = ROOT
		}

		every_owned_province = {
			owner = {
				export_to_variable = {
					which = tempvardev
					value = trigger_value:development
					who = PREV
				}
			}
			update_demand_based_on_craze = yes
			update_supply_and_demand_based_on_buildings = yes
			# execute_effect_for_every_trade_good = {
				# scripted_effect = "update_supply_for_trade_good"
			# }
			update_supply_for_trade_goods = yes
			execute_effect_for_every_trade_good = {
				scripted_effect = "update_demand_for_trade_good"
			}
		}

		execute_effect_for_every_trade_good = {
			scripted_effect = "post_province_evaluation"
		}

		execute_effect_for_every_trade_good = {
			scripted_effect = "update_national_supply_for_trade_good"
		}
		execute_effect_for_every_trade_good = {
			scripted_effect = "update_national_demand_for_trade_good"
		}
		REB = {
			execute_effect_for_every_trade_good = {
				scripted_effect = "change_REB_variable"
			}
		}
	}
	
	execute_effect_for_every_trade_good = {
		scripted_effect = "set_price_for_trade_good"
	}
}


update_national_supply_for_trade_good = {
	update_national_supply_for_trade_good_$trade_good_id$ = yes
}

update_national_demand_for_trade_good = {
	update_national_demand_for_trade_good_$trade_good_id$ = yes
}

update_demand_for_trade_good = {
	update_demand_for_trade_good_$trade_good_id$ = yes
}

stock_market_change_price_with_id = {
	stock_market_change_price_$trade_good_id$ = {
		value = $value$
		duration = $duration$
	}
}

stock_market_change_price = {
	change_price = {
		trade_goods = $trade_goods$
		key = "Current Market Conditions"
		value = $value$
		duration = $duration$
	}
}


set_price_for_trade_good = {
	#Assuming we have a way to get the global default price
	REB = {
		set_variable = {
			which = stock_market_price_value_$trade_good_id$
			value = 5
		}
		set_variable = {
			which = difference_value_$trade_good_id$
			which = stock_market_demand_for_$trade_good_id$
		}
		change_variable = {
			which = difference_value_$trade_good_id$
			which = stock_market_extra_demand_for_$trade_good_id$ #this is demand induced by buying goods. Slowly decays.
		}
		subtract_variable = {
			which = difference_value_$trade_good_id$
			which = stock_market_supply_for_$trade_good_id$
		}
		subtract_variable = {
			which = difference_value_$trade_good_id$
			which = stock_market_extra_supply_for_$trade_good_id$
		}
		set_variable = {
			which = sum_value_$trade_good_id$
			which = stock_market_supply_for_$trade_good_id$
		}
		change_variable = {
			which = sum_value_$trade_good_id$
			which = stock_market_extra_supply_for_$trade_good_id$
		}
		change_variable = {
			which = sum_value_$trade_good_id$
			which = stock_market_demand_for_$trade_good_id$
		}
		change_variable = {
			which = sum_value_$trade_good_id$
			which = stock_market_extra_demand_for_$trade_good_id$ #this is demand induced by buying goods. Slowly decays.
		}
		set_variable = {
			which = price_multiplier_$trade_good_id$
			which = difference_value_$trade_good_id$
		}
		divide_variable = {
			which = price_multiplier_$trade_good_id$
			which = sum_value_$trade_good_id$
		}
		change_variable = {
			which = price_multiplier_$trade_good_id$
			value = 1
		}
		multiply_variable = {
			which = price_multiplier_$trade_good_id$
			which = price_multiplier_$trade_good_id$
		}

		# NEEDS to happen before removing the 1
		multiply_variable = {
			which = stock_market_price_value_$trade_good_id$
			which = price_multiplier_$trade_good_id$
		}
		
		subtract_variable = {
			which = price_multiplier_$trade_good_id$
			value = 1
		}

	}
}

stock_market_on_startup = {
	1 = {
		add_province_triggered_modifier = stock_market_refresh_prices_monthly
		set_province_flag = first_game_month_flag
	}

	#measure_startup = yes
	priority_update = yes 
	apply_change_price_for_all_with_duration = { duration = 19 }

	every_country = {
		update_merchant_capacity_modifiers_for_country = yes
		set_variable = {
			which = merchant_capacity_left
			which = merchant_capacity_total
		}
	}

}

priority_update = {
	release_update = yes
}